-- Các món ăn nằm trong đơn giao hàng phải là các món có thể giao (biến bool giaohang  = true trong bảng monan_chinhanh) 
CREATE TRIGGER ma_mon_phieu_dat_check_giao_hang
ON ma_mon_phieu_dat
AFTER INSERT, UPDATE 
AS 
BEGIN 
    DECLARE @MaPhieu CHAR(5) 
    -- SELECT @MaPhieu = NEW.MaPhieu

    IF EXISTS (SELECT 1 FROM 
                INSERTED new JOIN
                "order" o ON new.MaPhieu = o.MaPhieu JOIN 
                mon_an_chi_nhanh mcn ON mcn.MaCN = o.MaCN
                WHERE mcn.MaMon = new.MaMon AND
                mcn.GiaoHang = 0 AND 
                o.LoaiPhieu = 3)
    BEGIN 
            RAISERROR(N'Món ăn đặt trong order giao hàng phải được giao bởi chi nhánh',16, 1);
        ROLLBACK TRANSACTION;
    END 
    
END;
GO

--  Mọi món ăn nằm trong chi nhánh phải nằm trong danh sách món của khu vực mà chi nhánh thuộc về 
CREATE TRIGGER mon_an_chi_nhanh_trigger
ON mon_an_chi_nhanh
AFTER INSERT, UPDATE 
AS
BEGIN 
    IF(0 >= ANY (SELECT COUNT(distinct mkv.MaMon) FROM INSERTED new JOIN 
                chi_nhanh cn ON new.MaCN = cn.MaCN LEFT JOIN
                mon_an_khu_vuc mkv ON mkv.MaKhuVuc = cn.MaKhuVuc AND
                                        new.MaMon = mkv.MaMon
                GROUP BY new.MaMon, new.MaCN))
    BEGIN
        RAISERROR(N'Món ăn của chi nhánh không có tại khu vực mà chi nhánh thuộc về', 16, 1)
        ROLLBACK TRANSACTION
    END
END;
GO

-- Nhân viên lập phiếu phải là nhân viên của chi nhánh và đang làm việc tại chi nhánh trong thời gian lập phiếu

CREATE TRIGGER order_trigger
ON "order"
AFTER INSERT, UPDATE
AS 
BEGIN 

    IF 1 <= ANY(SELECT count(DISTINCT nv.MaNV) FROM 
                INSERTED new JOIN 
                chi_nhanh cn ON new.MaCN = cn.MaCN LEFT JOIN
                nhan_vien nv ON new.NhanVienLap = nv.MaNV AND
                                nv.ChiNhanh != new.MaCN
                GROUP BY new.MaCN, new.NhanVienLap)
    BEGIN
        RAISERROR(N'Nhân viên lập phiếu phải đang làm việc tại chi nhánh được tạo đơn hàng', 16, 1)
        ROLLBACK TRANSACTION
    END
END;
GO